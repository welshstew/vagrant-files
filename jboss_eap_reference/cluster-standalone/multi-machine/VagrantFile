# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.require_version ">= 1.8.0"

# Install required Vagrant plugins
missing_plugins_installed = false
required_plugins = %w(vagrant-vbguest vagrant-hostmanager vagrant-cachier vagrant-triggers vagrant-auto_network)

required_plugins.each do |plugin|
  if !Vagrant.has_plugin? plugin
    system "vagrant plugin install #{plugin}"
    missing_plugins_installed = true
  end
end

# If any plugins were missing and have been installed, re-run vagrant
if missing_plugins_installed
  exec "vagrant #{ARGV.join(" ")}"
end

AutoNetwork.default_pool = '10.20.1.11/24'

require 'socket'
def private_ipv4
  Socket.ip_address_list.detect{|intf| intf.ipv4_private?}
end

hostmanager_ip = private_ipv4.ip_address unless private_ipv4.nil?

$setHostmanagerIp = <<SCRIPT
echo "#{hostmanager_ip}      hostmanager-vagrant.local" >> /etc/hosts
SCRIPT

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "garethahealy/centos72_java8"
  config.vm.box_version = "= 1.0.1"

  # Hashicorp atlas push
  # config.push.define "atlas" do |push|
  #   push.app = "garethahealy/jboss_fuse_621_child"
  # end

  # Config /etc/hosts via plugin
  config.hostmanager.enabled = true
  config.hostmanager.manage_host = true
  config.hostmanager.ignore_private_ip = false
  config.hostmanager.include_offline = true

  config.vm.define "jboss1" do |jboss1|
    # Assign network config
    jboss1.vm.hostname = "jboss1.vagrant.local"
    jboss1.vm.network "private_network", ip: "10.20.1.35"

    # Add the JBoss EAP /Users/swinchester/.m2/repository/org/jboss/eap/jboss-eap/6.4.0/jboss-eap-6.4.0.zip
    jboss1.vm.provision :"file", source: "~/.m2/repository/org/jboss/eap/jboss-eap/6.4.0/jboss-eap-6.4.0.zip", destination: "/opt/rh/jboss-eap-6.4.0.zip"

    #open ports, create standalone folders
    jboss1.vm.provision :shell, path: "bootstrap.sh", privileged: false
    jboss1.vm.provision :"file", source: "jboss-as.conf", destination: "/opt/rh/jboss-eap-6.4/bin/init.d/jboss-as.conf"

    #copy cluster.war over to the vm
    jboss1.vm.provision :"file", source: "../../app/cluster-demo.war", destination: "/opt/rh/jboss-eap-6.4/standalone-node-1/deployments/cluster-demo.war"

    jboss1.vm.provision :shell, path: "./node1/copy-and-setup-node1.sh", privileged: true

    # Complete message
    jboss1.vm.post_up_message = "jboss node 1 UP"
  end

  config.vm.define "jboss2" do |jboss2|
    # Assign network config
    jboss2.vm.hostname = "jboss2.vagrant.local"
    jboss2.vm.network "private_network", ip: "10.20.1.36"

    # Add the JBoss EAP /Users/swinchester/.m2/repository/org/jboss/eap/jboss-eap/6.4.0/jboss-eap-6.4.0.zip
    jboss2.vm.provision :"file", source: "~/.m2/repository/org/jboss/eap/jboss-eap/6.4.0/jboss-eap-6.4.0.zip", destination: "/opt/rh/jboss-eap-6.4.0.zip"

    #open ports, create standalone folders
    jboss2.vm.provision :shell, path: "bootstrap.sh", privileged: false

    jboss2.vm.provision :"file", source: "jboss-as.conf", destination: "/opt/rh/jboss-eap-6.4/bin/init.d/jboss-as.conf"

    #copy cluster.war over to the vm
    jboss2.vm.provision :"file", source: "../../app/cluster-demo.war", destination: "/opt/rh/jboss-eap-6.4/standalone-node-2/deployments/cluster-demo.war"

    jboss2.vm.provision :shell, path: "./node2/copy-and-setup-node2.sh", privileged: true

    # Complete message
    jboss2.vm.post_up_message = "jboss node 2 UP"
  end
end
